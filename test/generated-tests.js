var tape = require('tape')

var run = require('./helpers/run')
var put = require('./helpers/put')
var create = require('./helpers/create')

var validate = require('./helpers/fuzzing').validate

tape('should not prematurely end forked workers in iterate (autogenerated test)', function (t) {
  var writesPerReplication = [
    [['ffcdd', ['jfijefcebiedehefabjg']]],
    [
      ['ajbja', [null, 'ihcfacefedfdddfbgfdf']],
      ['fhacd', ['agbcbbfijagidicdbchb']]
    ],
    [['dhjjf', ['idebefiifheajafefhfa']]]
  ].map(b => new Map(b))

  create.many(2, function (err, dbs, replicateByIndex) {
    t.error(err)
    run(
      cb => {
        put(
          dbs[0],
          [
            {
              key: 'ffcdd',
              value: 'jfijefcebiedehefabjg'
            }
          ],
          cb
        )
      },
      cb => replicateByIndex(cb),
      cb => {
        put(
          dbs[1],
          [
            {
              key: 'ajbja',
              value: 'ihcfacefedfdddfbgfdf'
            }
          ],
          cb
        )
      },
      cb => {
        put(
          dbs[0],
          [
            {
              key: 'fhacd',
              value: 'agbcbbfijagidicdbchb'
            }
          ],
          cb
        )
      },
      cb => replicateByIndex(cb),
      cb => {
        put(
          dbs[0],
          [
            {
              key: 'dhjjf',
              value: 'idebefiifheajafefhfa'
            }
          ],
          cb
        )
      },
      cb => replicateByIndex(cb),
      cb => validate(t, dbs[0], writesPerReplication.slice(0, 3), cb),
      err => {
        t.error(err)
        t.end()
      }
    )
  })
})
